# -*- coding: utf-8 -*-
"""GUVI CHALLENGES.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T6W8X0TnUIuy5okqvzetZoVc67mbRx_i

TO REMOVE DUPLICATE ELEMENTS
"""

n=list(map(str,input().split()))
#for i in n:
n1=set(n)
print(*n1)

"""MAZE PROBLEM ,PUZZLE SOLVING"""

import queue

def createeMaze():
    maze = []
    maze.append(["#","O","#","#","#","#","#"])
    maze.append(["#"," ","#"," "," "," ","#"])
    maze.append(["#"," ","#"," ","#","#","#"])
    maze.append(["#"," ","#"," "," "," ","#"])
    maze.append(["#"," ","#","#"," ","#","#"])
    maze.append(["#"," "," "," "," "," ","#"])
    maze.append(["#","#","#","#","#","X","#"])
    
    return maze


def printMaze(maze, path=""):
    for x, pos in enumerate(maze[0]):
        if pos == "O":
            start = x

    i = start
    j = 0
    pos = set()
    for move in path:
        if move == "L":
            i -= 1

        elif move == "R":
            i += 1

        elif move == "U":
            j -= 1

        elif move == "D":
            j += 1
        pos.add((j, i))
    
    for j, row in enumerate(maze):
        for i, col in enumerate(row):
            if (j, i) in pos:
                print("1 ", end="")
            else:
                print(col + " ", end="")
        print()
        


def valid(maze, moves):
    for x, pos in enumerate(maze[0]):
        if pos == "O":
            start = x

    i = start
    j = 0
    for move in moves:
        if move == "L":
            i -= 1

        elif move == "R":
            i += 1

        elif move == "U":
            j -= 1

        elif move == "D":
            j += 1

        if not(0 <= i < len(maze[0]) and 0 <= j < len(maze)):
            return False
        elif (maze[j][i] == "#"):
            return False

    return True


def findEnd(maze, moves):
    for x, pos in enumerate(maze[0]):
        if pos == "O":
            start = x

    i = start
    j = 0
    for move in moves:
        if move == "L":
            i -= 1

        elif move == "R":
            i += 1

        elif move == "U":
            j -= 1

        elif move == "D":
            j += 1

    if maze[j][i] == "X":
        print("Found: " + moves)
        printMaze(maze, moves)
        return True

    return False

sam_k = queue.Queue()
sam_k.put("")
add = ""
maze  = createeMaze()
g = ["L", "R", "U", "D"]

while not findEnd(maze, add): 
    add = sam_k.get()
    for j in g:
        put = add + j
        if valid(maze, put):
            sam_k.put(put)

"""SUDOKU"""

def create_board():
    board = []
    board.append([3,3,0,0,7,0,0,0,0])
    board.append([9,0,2,1,9,5,0,0,0])
    board.append([0,9,8,0,1,0,0,6,0])
    board.append([8,0,2,0,6,2,0,0,3])
    board.append([4,0,0,3,0,3,2,2,3])
    board.append([7,0,1,2,2,1,2,3,6])
    board.append([0,6,0,5,0,0,2,6,0])
    board.append([0,0,3,4,1,9,0,3,5])
    board.append([1,1,2,3,2,0,2,7,9])
    
    return board

def print_board(sam_k):
    for i in range(len(sam_k)):
        if i%3==0 and i!=0:
            print("-----------------------")
        for j in range(9):
            if j%3 == 0 and j!=0:
                print(" | ", end="")
                
            if j==8:
                print(sam_k[i][j])
            else:
                print(str(sam_k[i][j]) + " ", end="")
                
def find_empty(sam_k):
    for i in range(9):
        for j in range(9):
            if sam_k[i][j] == 0:
                return (i,j)
            
    return None

def solve(sam_k):
    find = find_empty(sam_k)
    if not find:
        return True
    else:
        row, col = find
        
    for i in range(1,10):
        if valid(sam_k, i, (row,col)):
            sam_k[row][col] = i
            
            if solve(sam_k):
                return True
            
            sam_k[row][col] = 0
    return False

def valid(sam_k, num, pos):
    for i in range(9):
        if sam_k[pos[0]][i] == num and pos[1]!= i:
            return False
    for i in range(9):
        if sam_k[i][pos[1]] == num and pos[0]!=i:
            return False
        
    sam_k_x = pos[1]//3
    sam_k_y = pos[0]//3
    
    for i in range(sam_k_y*3, sam_k_y*3+3):
        for j in range(sam_k_x*3, sam_k_x*3 + 3):
            if sam_k[i][j] == num and (i,j) != pos:
                return False
    return True

board = create_board()
print_board(board)
solve(board)
print("_______________________________")
print_board(board)

"""Question 3: Thookku Durai is a farmer, who grows sugarcane. He has a measuring scale to measure the
sweetness of the sugarcane. He will not sell any sugarcane whose sweetness is less than 1. The
sweetness of the sugarcane is measured by: Sweetness = (Cosec(90-A))/(Cosec(A))
Where A is the angle at which the sugarcane was inclined when it grew.
How many sugarcanes can he sell almost?
Input:
10
120 149 122 45 0 90 22 33 49 1
Output:
1
Explanation:
The first line of input is N – Number of sugarcanes grown
N spaces values of A – Angle of inclination while each sugarcane grew
And one single integer output denoting the maximum number of sugarcanes that can be sold.

"""

limit=int(input())
sugarcane=list(map(int,input().split()))[:limit]
count=0
for i in range(0,limit):
  if sugarcane[i]==45:
    count=count+1
print(count)

"""TO CHECK A NO IS FIBONACCI OR NOT WITHOUT GENERATING FIBONACCI SEQUENCE

Questoin 4: Sivasamy is a farmer living in the southern part of Tamilnadu. He has ‘N’ bulls on his farm,
which he uses to plough his fields. Hence “Mattu Pongal” is a special occasion to celebrate the hard
work of all those bulls. So, for every Mattu Pongal, the bulls will be decorated, the horns of the bull are
painted. Each bull is painted with different colors so it looks visually appealing. But seeing the costeffectiveness part, it is difficult to buy ‘N’ different colors of paints. So Sivasamy usually mixes two or
more colors to make a newer color. Paintbox costs 225 rs each. So what will be the minimum
expenditure of Sivasamy to color all his ‘N’ bulls with different colors?
Input:
25
Output:
1125
Explanation:
One single integer input N – Number of bulls
One single integer output denoting the minimum expenditure of Sivasamy.
"""

n=int(input())
print(n.bit_length()*225)

"""CREATION OF THREADS"""

import threading
import time

class myThread(threading.Thread):
    def __init__(self,threadID,name,counter):
        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.counter = counter
        
    def run(self):
        print("Starting " + self.name + "\n")
        print_time(self.name,self.counter, 5)
        print("Exiting " + self.name + "\n")
def print_time(threadName, delay, counter):
    while counter:
        time.sleep(delay)
        print("%s: %s %s" %(threadName, time.ctime(time.time()),counter) + "\n")
        counter-=1
thread1 = myThread(1, "Thread-1", 1)
thread2 = myThread(2, "Thread-2", 1.5)
thread3 = myThread(3, "Thread-3", 0.2)
thread4=myThread(4,"Thread-4",0.3)

thread1.start()
thread2.start()
thread3.start()
thread4.start()
thread1.join()
thread2.join()
thread3.join()
thread4.join()
print("Exit----X")

"""****** TO FIND THE FACTORS AND FIND WHICH ELEMENT IS USED TO FIND AN ELEMENT OR FIND TH E FRACTIONS"""

from math import sqrt as sq,gcd as g
def min_fact(n):
  k=int(sq(n))+1
  for i in range(2,k):
    if n%i==0:
      return i
  return n
a,b=map(int,input().split())
m=min_fact(a)
a//=m
x=g(a,b)
d=b//x
n=a//x
print(n,'/',d,end='')

l=list(map(int,input().split()))
i=0
s,x=[],[]
while i<len(l):
  if l[i]>0:
    s.append(l[i])
  else:
    s=[]
    x.append(sum(s))
    i=i+1
sum=0
for i in range(len(x)):
  if x[i]>sum:
    s=x[i]
    sum=s[i]
print(s)
#print(x)



"""LCS-THE COMMON STRINGS ARE PRINTED .REPATITION IS NOT ALLOWED"""

def lcs(X, Y, m, n):
    L = [[0 for x in range(n+1)] for x in range(m+1)]
    for i in range(m+1):
        for j in range(n+1):
            if i == 0 or j == 0:
                L[i][j] = 0
            elif X[i-1] == Y[j-1]:
                L[i][j] = L[i-1][j-1] + 1
            else:
                L[i][j] = max(L[i-1][j], L[i][j-1])
    index = L[m][n]
    lcs = [""] * (index+1)
    lcs[index] = ""
    i = m
    j = n
    while i > 0 and j > 0:
        if X[i-1] == Y[j-1]:
            lcs[index-1] = X[i-1]
            i-=1
            j-=1
            index-=1
        elif L[i-1][j] > L[i][j-1]:
            i-=1
        else:
            j-=1
    print("".join(lcs))  
X = "abcdaf"
Y = "acbcf"
m = len(X)
n = len(Y)
lcs(X, Y, m, n)

"""TO REMOVE ELEMENTS SO THAT THE LIST MAY BE IN MAXIMUM SORTED"""

n=list(map(int,input().split()))
c=0
s,a,k=[],[],[]
for i in range(len(n)):
  if c<n[i]:
    s.append(n[i])
    c=n[i]
  a.append(s)
k=max(a)
print(*k)

n=list(map(str,input().split()))
n.sort()
for i in range(len(n):
  for j in range(i):
    s=s*(j+1)
    if s<=a:
      c.append(n[i])
print(c)

"""TO MULTIPLY A NUMBER"""

a,b=map(int,input().split())
sum=0
while b!=0:
  if b &1:
    sum+=a
  a<<=1
  b>>=1
print("Ans =",sum)

n=int(input())
m=int(input())
b=n*m
for i in range(n,m+1):
  if b%i==0:
    print(i)

n=list(input().split())
k=n.copy()
k=list(set(k))
k.sort()
mid=len(n)//2
if len(n)%2==0:
  l=n[:mid]
else:
  l=n[:mid+1]
  if max(n)==n[mid]:
    l[-1]=min(k)
    l[-2]=k[k.index(l[-2])+1]
    print(l)

def ls(l):
  ls=[0]
  for i in range(l,len(l)):
    c=0
    for j in range(0,i):
      if l[i]>l[j]:
        c+=1
    ls.append(c)
  print(ls)
  return max(ls)
l=list(map(int,input().split(' ')))
print("length:",ls(l))

import math
n=list(input())
a,k=[],[]
f=0
m=n.copy()
m.sort()
l=len(n)
s=l-1
for i in range(l):
  for j in range(l):
    if n[i]==m[j]:
      a.append(j+1)
for i in range(l):
  c=0
  for j in range(i,l):
    if a[i]>a[j]:
      c+=1
  k.append(c)
for i in range(l):
  f+=math.factorial(s)*k[i]
  s-=1
print(f+1)

"""AN UNSORTED ARRAY ,REMOVE AN ELEMENT AND MAKE IT AS A SORTED ARRAY"""

l=list(map(int,input().split()))
for i in range(len(l)):
  for j in range(i+1,i):
    if l[i]>l[j]:
      a=l[i]
      l[i]=l[j]
      l[j]=a
print(l)

"""TO FIND THE PASSWORD OF A CUSTOMER"""

import getpass as gp
g=gp.getpass()
print(g)

"""Python Program to Convert Decimal to Binary, Octal and Hexadecimal"""

n=int(input())
print("octal is",oct(n))
print("hexadecimal is ",hex(n))

hd=input()
dec=int(hd,16)
print(dec)

"""Python Programming Code to Convert Hexadecimal to Octal"""

hd=input()
d=int(hd,16)
print(oct(d))

"""Python Programming Code to Check Alphabet or Not

for tables
"""

number=int(input())
for i in range(1,20+1):
  print(i,"*",number,"=",number*i)

n=int(input())
n2=int(input())
for i in range(n,n2+1):
  if n%i==0:
    break;
  else:
    print(i)

n=input()
print(n.isalpha())

"""input is equal to minimum of sum of digits"""

n=int(input())
l=[]
sum=0
temp=n
for i in range(0,200):
  #temp=n
  n=n%10
  sum=sum+temp
l.append[sum]
print(l)

from math import sqrt
n=int(input())
k=int(sqrt(n))+1
for i in range(k,0,-1):
  if n%i==0:
    t=n//i
    sum=i+t
    break
print(sum)

"""to sort a list and count how many swaps/sorts .the sort is in either ascending or descending"""

l=list(map(int,input().split()))
l2=l.copy()
m1,m2=0,0
n=len(l)
for i in range(n):
  t,t1=i,n-1
  for j in range(i+1,n):
    if(l[t]>l[j]):
      t=j
    if(l2[n-1-t1]>l2[n-1-j]):
      t1=j
  if(t!=i):
    l[i],l[t]=l[t],l[i]
    m1+=1
  if(t1!=i):
    l2[n-1-i],l2[n-1-t1]=l2[n-1-t1],l2[n-1-i]
    m2+=1
print(min(m1,m2))

"""SWAP INDEX BASED ON INDEX"""

from math import gcd as g
l=list(map(int,input().split()))
m=[]
for i in range(len(l)):
  k=l[i]
  c=0
  while(l[l[i]-1]!=k):
    i=l[i]-1
    c+=1
    m.append(c+1)
k=m[0]
for i in m[1:]:
  k=k*i//g(k,i)
print(k)

def primefactors(n):
  i=2
  fac=[]
  while i*i<=n:
    if n%i:

l=list(map(input().split()))
for i in l:
  n=i-1
  if n&n-1==0:
    print(i)

"""PRE ORDER TREVERSAL"""

class Node():
    def __init__(self,val):
        self.val = val
        self.left = None
        self.right = None
        
class BinartyTree():
    def __init__(self,root):
        self.root = Node(root)
        
    def print_tree(self,traversal_type):
        if traversal_type =="P":
            return self.preorder(tree.root,"")
        if traversal_type =="I":
            return self.inorder(tree.root,"")
        if traversal_type =="POST":
            return self.postorder(tree.root,"")
    def preorder(self,start,ans):
        if start:
            ans+= (str(start.val)+"->")
            ans = self.preorder(start.left,ans)
            ans = self.preorder(start.right,ans)
        return ans
    
    def postorder(self,start,ans):
        if start:
            ans = self.postorder(start.left,ans)
            ans = self.postorder(start.right,ans)
            ans+=(str(start.val) + "->")
        return ans
    
    def inorder(self,start,ans):
        if start:
            ans = self.inorder(start.left,ans)
            ans+=(str(start.val) + "->")
            ans = self.inorder(start.right,ans)
        return ans
        
tree = BinartyTree(1)
tree.root.left = Node(2)
tree.root.right = Node(3)
tree.root.left.left = Node(4)
tree.root.left.right = Node(5)
tree.root.right.left = Node(6)
tree.root.right.right = Node(7)

print(tree.print_tree("POST"))

"""2
6 9 18 3
3 7 20 5
OUTPUT
162                                 
"""

for i in range(int(input())):
  forward,backward,distance,time=map(int,input().split())
  d=0
  while distance-backward>0:
    distance=distance-backward+forward
    d=d+forward+backward
    d=d+forward +backward
  d=d+distance
  print(d*time)

n,goal=map(int,input().split())
l=list(map(int,input().split()))
a=0
day=0
flag=1
while(flag):
  day+=1
  for i in l:
    if day%i==0:
      a+=1
      if a==goal:
        flag=0
        break
print(day)

n=int(input())
l,m=list(map(int,input().split()))
m=int(input())
for i in range(m)
f=int(input())

"""TO TELL THE EXPRESSION IS TRUE OR NOT"""

s=input()
d=s.replace("=","==")
print(eval(d))

import math
s=input()
e=math.simplyfy(s)
print(e)

"""EQUATION SOLVING"""

from sympy import symbols, solve
x = symbols('x')
expr =input()
sol = solve(expr)
print(sol)

"""TO TELL THE EXPRESSION IS TRUE OR NOT"""

class XO:
    n = 1
    t = [' ']*9
    def __init__(self,player1,player2):
        self.player1 = player1
        self.player2 = player2
        
        print("HI WELCOME TO THE GAME OF XO",self.player1,"and",self.player2)

    def display(self):
        for i in range(3):
            for j in range(3):
                print(self.t[3*i+j],end="")
                if(j!=2):
                    print("|",end="")
            print()
            if(i!=2):
                print("------")
    
    def check(self):
        if(self.t[0]==self.t[1]==self.t[2] and self.t[0]!= " " or self.t[3]==self.t[4]==self.t[5] and  self.t[3]!= " " or self.t[6]==self.t[7]==self.t[8] and self.t[6]!= " "  or self.t[0]==self.t[3]==self.t[6] and self.t[0]!= " " or self.t[1]==self.t[4]==self.t[7] and self.t[7]!= " " or self.t[2]==self.t[5]==self.t[8] and self.t[8]!= " " or self.t[0]==self.t[4]==self.t[8] and self.t[4]!= " " or self.t[2]==self.t[4]==self.t[6] and self.t[2]!= " "):
            return True
        else:
            return False
    
    def play(self):
        while(self.n<=9):
            if(self.n%2!=0):
                c = 'X'
            else:
                c = 'O'
            b = int(name())
            self.t[b-1] = c
            a.display()
            if a.check():
                print("Won")
                break
            self.n+=1
        if(self.n==10):
            print("Draw")
        else:
            print("Won")
        return

def name():
    n = input()
    return n
player1 = name()
player2 = name()

a = XO(player1,player2)
a.play()

"""TO REMOVE A CHARACTER AND MAKE IT AS PALINDROME"""

n="radear"
a=n[0:3]
b=n[4:]
c=a+b
re=c[::-1]
if c==re:
  print("palindrome",c)
#print("after",re)

"""R A D E A R"""

n=input()
r=n[::-1]
for i in range(len(n)):
  for j in range(0,i):

"""BINARY SEARCH"""

def binary(l,ser):
    mid = len(l)//2
    if l[mid] == ser:
      return l[mid]
    elif ser>l[mid]:
      l = l[mid+1:]
      return binary(l,ser)
    else:
        l = l[:mid]
        return binary(l,ser)




l = [1,2,3,4,5,6,7]
ser = 3
print(binary(l,ser))

"""to count number of 2 in a factors"""

n=int(input())
count=0
while(n%2==0):
    n//=2
    count=count+1
print(2**count)

"""quick sort"""

def quick_sort(A):
  quick_sort2(A,0,len(A)-1)
def quick_sort(A,low,high):
  if low<high:
    p=partition(A,low,high)
    quick_sort2(A,low,p-1)
    quick_sort(A,p+1,high)
def get_pivot(A,low,high):
  mid=(low+high)//2
  pivot=high
  if a[low]<A[mid] and A[mid]<A[high]:
    pivot=mid
  elif a[low]<A[high]:
    pivot=low
  return pivot
def partition(A,low,high):
  pivotindex=get_pivot(A,low,high)
  pivotvalue=A[pivotindex]
  A[pivotindex],A[low]=A[low],A[pivotIndex]
  border=low
  for i in range(low,high+1):
    if A[i]<pivotValue:
      border+=1
      A[i],A[border]=A[border],A[i]
      A[low],A[border]=A[border],A[low]
  return border
l=list(map(int,input().split()))
quick_sort(l)
print(l)

"""179 Given a string and a number K, change every kth character to uppercase from beginning in string.
Sample Testcase :
INPUT
string 2
OUTPUT
sTrInG
"""

s,n=input().split()
n=int(n)
s=list(s)
if n>0:
    for i in range(n-1,len(s),n):
        s[i]=s[i].upper()
print(*s,sep='')

"""insertion sort"""

s=input()
print(s[::-1])

"""merge sort"""

def mergesort(A):
  if len(A)>1:
    mid=len(A)//2
    left=A[:mid]
    right=A[mid:]
    mergesort(left)
    mergesort(right)
    i=0
    j=0
    k=0
    while i<len(left)and j<len(right):
      if left[i]<right[j]:
        A[k]=left[i]
        i+=1
      else:
        A[k]=right[j]
        j+=1
      k+=1
    while i<len(left):
      A[k]=left[i]
      i+=1
      k+=1
    while j<len(right):
      A[k]=right[j]
      j+=1
      k+=1
A=list(map(int,input().split()))
mergesort(A)
print(*A)

"""to remove the consecutive number"""

l=input()
n=["*"]
for i in l:
  if i==n[-1]:
    n.pop()
  else:
    n.append(i)
n.pop(0)
if len(n)==0:
  print("-1")
else:
  print("".join(n))

"""669 to delete all the repeating characters and print the result left.

Input Description:
You are given a string ‘s’

Output Description:
Print the remaining string

Sample Input :
mississipie
Sample Output :
mpie
"""

l=input()
n=["*"]
for i in l:
  if i==n[-1]:
    n.pop()
  else:
    n.append(i)
n.pop(0)
print(*n)

"""balanced paranthesis

"""

l=input()
n=["*"]
for i in l:
  if i==n[-1]:
    n.pop()
  else:
    n.append(i)
n.pop(0)
if len(n)%2==0:
  print("balanced")
else:
  print("unbalanced")

"""636 Jennyfer is fond of strings. She wants to read the character from right to left, so she wants you to design a suitable algorithm which satisfy her desire.

Input Description:
Enter the string ‘s’

Output Description:
Print the string from characters right to left.

Sample Input :
jennyfer
Sample Output :
Refynnej
"""

s=input()
a=s[::-1]
c=a[1:]
b=a[0].upper()
d=b+c
print(d)

"""508 write a program to sort a given set of strings based on their alphabetical order. Help Ria’s mother to complete the program.

 

Input Description:
A set of N strings

Output Description:
Alphabetically sorted set of strings

Sample Input :
3
InfinityWar EndGame Avengers
Sample Output :
Avengers EndGame InfinityWar
"""

limit=int(input())
str = input().split()[:limit]
print(*sorted(str))

"""selection sort"""

def selectionsort(A):
  for i in range(len(A)-1):
    minimum=i
    for j in range(i+1,len(A)):
      if A[j]<A[minimum]:
        minimum=j
        A[i],A[minimum]=A[minimum],A[i]
l=list(map(int,input().split()))
selectionsort(l)
print(*l)

"""bubble sort"""

def bubblesort(A):
  for i in range(len(A)-1,0,-1):
    for j in range(0,i):
      if A[j+1]<A[j]:
        A[j],A[j+1]=A[j+1],a[j]
        flag=0
      if flag==1:
        return
l=list(map(int,input().split()))
bubblesort(l)
print(*l)

"""to check factors and prime no

"""

print("Enter 'x' for exit.");
num = input("Enter a number: ");
if num == 'x':
    exit();
else:
    count = 0;
    number = int(num);
    for i in range(2, number-1):
    	if number%i == 0:
    	    print(i);
    	    i += 1;
    	    count += 1;
    if count==0:
        print(number,"is a prime number.");

"""speed can"""

import math
i=int(input())
f=int(input())
c=math.log(f/i)/math.log(1.25)
print(float(c))

"""test"""

n=int(input())
a=bin(n)[2:]
sum=0
for i in a:
    if i=='1':
        sum=sum+1
        #print(sum)
    else: 
        sum=0
if sum%2==0:
    print("win")
else:
    print("loss")

s=int(input())
if s%3==0:
  print("yes")
else:
  print("not")

"""516 Assume your brother studies in class 2. He has to  complete his homework on co-primes. As an elder sibling help him in finding whether the given two numbers is co-prime or not.

Input Description:
You will be given two numbers ‘n’ and ‘m’

Output Description:
Your task is to tell whether numbers is co prime or not. If it is a co-prime print 1 else 0

Sample Input :
3 5
Sample Output :
1
"""

import math
a,b=map(int,input().split())
if math.gcd(a,b)==1:
  print("1")
else:
  print("0")

"""520 """

n=int(input())

# Give list of numbers having size n
l=list(map(int,input().strip().split(' ')))

#print("Palindrome numbers are:")
# check through the list to check 
# number is palindrome or not
for i in l:
    num=str(i)
    if("".join(reversed(num))==num):
        print(i)

"""597 you are given with array of numbers.you have to find whether array is beautiful or not. A beautiful array is an array whose sum of all numbers is divisible by 2, 3 and 5

Input Description:
You are given a number ‘n’ denoting the size of array.Next line contains n space separated numbers.

Output Description:
Print 1 if array is beautiful and 0 if it is not

Sample Input :
5
5 25 35 -5 30
Sample Output :
1
"""

limit=int(input())
l=list(map(int,input().split()))[:limit]
count=0
for i in l:
  count+=i
if count%2==0 and count%3==0 and count%5==0:
  print("1")
else:
  print("0")

"""How many possible ways are to shuffle given number of playing cards?.
Input Size : |N| <= 1000000
Sample Testcase :
INPUT
7
OUTPUT
5040
"""

n=int(input())
s=1
for i in range(n,0,-1):
  s=s*i
print(s)

"""223 Given a number N followed by a list of N numbers. Write a program to reverse the list and print the list.
Input Size : 1 <= N <= 10000
Sample Testcases :
INPUT
7
1 2 3 4 5 6 7
OUTPUT
7->6->5->4->3->2->1
"""

limit=int(input())
l=list(map(str,input().split()))[:limit]
l.reverse()
a=("->").join(l)
print(a)



a=list(map(float,input().split()))
b=len(a)
c=sum(a)
d=c/b
print(round(d,2))

"""787 For this question, you will write a program that, given a positive integer M and a list of elements L, outputs the list element M links away from the end of the list. For this program, we will use 1-indexing. That means nth_to_last is the "1st-to-last" element, or simply the last element in the list.For this question, you will write a program that, given a positive integer M and a list of elements L, outputs the list element M links away from the end of the list. For this program, we will use 1-indexing. That means nth_to_last is the "1st-to-last" element, or simply the last element in the list.

Input Description:
The first line of input will be one single integer N The second line will have S spaced elements

Output Description:
The output will be the Nth number from 1st-to-last

Sample Input :
4
10 200 3 40000 5
Sample Output :
200

"""

n=int(input())
l=list(map(int,input().split()))
if(n<=len(l)):
    print(l[-n])
else:
	print()

"""743 You are given a task is to print Mirrored Rhombus pattern using '*' by getting 'n' as input.

Input Description:
You are given number ‘n’.

Output Description:
Print the pattern as follows

Sample Input :
4
Sample Output :
****
 ****
  ****
   ****
"""

n=int(input())
for i in range(0,n):
  print(" "*i+"*"*n)

"""810 Accept a string and find if it is of date format 'dd/mm/yy'."""

import datetime
inputDate = input()
day,month,year = inputDate.split('/')
isValidDate = True
try :
    datetime.datetime(int(year),int(month),int(day))
except ValueError :
    isValidDate = False
if(isValidDate) :
    print ("Valid")
else :
    print ("Not valid")

"""808 Write a Program to Calculate the Number of Upper Case Letters and Lower Case Letters in a String"""

s=input()
c=0
count=0
for i in s:
  if i.isupper():
    c=c+1
  elif i.islower():
    count=count+1
print("lowercase:",count)
print("uppercase:",c)

"""733 Input Description:
The first line of input will contain one integer value N - Number of coconut trees The second line of input will contain the heights of each coconut trees, each separated by spaces

Output Description:
One single number - The number of trees that you will climb

Sample Input :
5
1 2 3 4 5
Sample Output :
1
"""

n=int(input())
l=[int(i) for i in input().split()]
a=min(l)
b=l.count(a)
print(b)

"""794 Write a Program to Accept Three Digits and Print all Possible Combinations from the Digits

Input Description:
The input contains an integer

Output Description:
Print the possible combination from the string

Sample Input :
1 2 3
Sample Output :
1 2 3
1 3 2
2 1 3
2 3 1
3 1 2
3 2 1

"""

a,b,c=map(int,input().strip().split())
d=[]
d.append(a)
d.append(b)
d.append(c)
for i in range(0,3):
  for j in range(0,3):
    for k in range(0,3):
      if i!=j & j!=k & k!=i:
        print(d[i],d[j],d[k])

"""785 Print the most repeating term from the list of numbers

Input Description:
'n' spaced integers.

Output Description:
Single number 'X'

Sample Input :
1 2 3 4 5 6 2 2 2 1 1 1 1 1
Sample Output :
1
"""

def freq(List): 
    return max(set(List), key = List.count) 
List = input().split()
print(freq(List))

"""736 Ideal Pairs are hard to find, especially in numbers. Two numbers are said to be a pair if the sum of the factors of one number (excluding the number itself) is equal to the other number and vice versa. The numbers are lost and seeking your help find their pair back. Your task is to help the numbers find its pair back.

Input Description:
One single integer N 1<= N <=100000

Output Description:
One single integer, the pair of N

Sample Input :
220
Sample Output :
284
"""

def p(n,c):
    s = 0
    if c >= n:
        return n
    if n % c == 0:
        s += c
        print(s,end=',')
    return p(n,c+1)
n = int(input('enter no:'))
c = 1
print(p(n,c))

"""825 Write a Program to test Collatz Conjecture for a Given Number"""

def collatz(n):
    while n > 1:
        print(n, end=' ')
        if (n % 2):
            # n is odd
            n = 3*n + 1
        else:
            # n is even
            n = n//2
    print(1, end='')
n = int(input())
print( end='')
collatz(n)

"""792 Write a Program to Convert Kilometers to Miles (2 Precision)"""

m=float(input())
c=0.621371
miles=m*c
print("%.2f"%miles)

"""819 Write a program to replace by "*" in the middle of a string."""

n=list(input())
k=len(n)
if(k%2==0):
  l=k//2
  m=l-1
  n[l]='*'
  n[m]='*'
elif(k%2==1):
  l=k//2
  n[l]='*'
print("".join(n))

"""816 write a program to check the given number is a deficient number or not"""

import math
def divisorsSum(n) :
   sum = 0  
   i = 1
   while i<= math.sqrt(n) :
       if (n % i == 0) :
           if (n / i == i) :
               sum = sum + i
           else :
               sum = sum + i;
               sum = sum + (n / i)
       i = i + 1
   return sum
def isDeficient(n) :
   return (divisorsSum(n) < (2 * n))
n=int(input())
if ( isDeficient(n) ):
   print ("Yes")
else :  
   print ("No")

"""817 Write a program to check the given number is an abundant number or not"""

import math
def getSum(n) :
   sum = 0
   i = 1
   while i <= (math.sqrt(n)) :
       if n%i == 0 :
           if n/i == i :
               sum = sum + i
           else :
               sum = sum + i
               sum = sum + (n / i )
       i = i + 1
     
   sum = sum - n
   return sum
def checkAbundant(n) :
   if (getSum(n) > n) :
       return 1
   else :
       return 0
l=int(input())
if(checkAbundant(l)==1) :
   print("Yes")
else :
   print("No")

"""814 Write a program to check the given two number is betrothed number or not"""

def abu(n):
   sum=0
   for i in range(1,n//2+1,+1):
       if(n%i==0):
           sum+=i
   return sum

l,m=map(int,input().split(" "))
o=abu(l)
h=abu(m)
if(l+1==h and m+1==o):
   print("Yes")
else:
   print("No")

"""796 Write a Program to Count Set Bits in a Number"""

#import math
number=int(input())
c=bin(number)
d=c[2:]
#print(d)
count=0
for i in d:
  if i=='1':
    count=count+1
print(count)

"""812 Write a program to check the given number is Adam number or not"""

n=input()
rn=n[::-1]
n1=int(n)
rn2=int(rn)
n1=str(n1*n1)
rn2=str(rn2*rn2)
if n1==rn2[::-1] and rn2==n1[::-1]:
  print("Yes")
else:
  print("No")

"""756 Consider the following series:

 1,1,2,3,4,9,8,27,16,81,32,243,64,729,128,2187………

This series is a mixture of 2 series – all  the odd terms in this series form a geometric series and all the even terms form yet another geometric series.                        

Write a program to find the Nth term in this series.
"""

n=int(input())    
if n % 2 == 0: 
    n //= 2
    print(3 ** (n - 1)) 
else: 
    n = (n // 2) + 1
    print(2 ** (n - 1))

"""757 Look at the series below: 1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,…..

This series is formed as below:

 1.term(1)=1

2.term(2)=2

3.term(N)=term(N-1)+term(N-2)for N>2
"""

n=int(input())
list=[]
list.append(1)
list.append(2)
if n>2:
  for i in range(2,n):
    list.append(list[i-1]+list[i-2])
  print(list[n-1])

"""739 You are given a task is to print triangle shaped pattern using numbers by getting a number n as input."""

n=int(input())
for i in range(0,n):
   print(" "*(n-i-1),end="")
   for j in range(0,i+1):
       print(n-i,end="")
   print()

"""747 You are given a task is to print pattern using numbers by getting n as input.

Input Description:
You are given an integer ‘n’

Output Description:
Print pattern as shown

Sample Input :
4
Sample Output :
1234321
123 321
12   21
1     1
"""

n=int(input())
for i in range(n):
  for j in range(n):
    if(i+j<=n-1):
      print(j+1,sep='',end='')
    else:
      print(" ",sep='',end='')
for j in range(1,n):
  if(i<=j):
    print(n-j,sep='',end='')
  else:
      print(" ",sep='',end='')
      print()

"""741 You are given a task is to print pattern using alphabets by getting input of n.

Input Description:
You are given number ‘n’.

Output Description:
Print pattern

Sample Input :
4
Sample Output :
a
bb
ccc
dddd
"""

n=int(input())
for i in range(n):
   print((chr(97+i))*(i+1))

"""801 Write a Program to Check if a Date is Valid and Print the Incremented Date Otherwise Invalid"""

n1,n2,n3=map(int,input().split())
if n2==12 and n1==31:
   n3=n3+1
   n2=1
   n1=1
elif ((n2>=1 and n2<=11) and (n1==31 or n1==30 or n1==28 or n1==29)):
 n2=n2+1
else:
 n1=n1+1
print(n1,end=" ")
print(n2,end=" ")
print(n3)

"""788 Write a program to check whether the given string is a pan card format or not. if its pan card format print Yes otherwise No"""

n=input()
if n.isalnum():
  print('Yes')
else:
  print('No')

"""800 Write a  Program to Clear the Rightmost Set Bit of a Number"""

n=int(input())
a=n &n-1
print(a)

"""798 Write a  program takes in the number of terms and finds the sum of the sine series."""

import math
def sin(x,n):
    sine = 0
    for i in range(n):
        sign = (-1)**i
        pi=22/7
        y=x*(pi/180)
        sine = sine + ((y**(2.0*i+1))/math.factorial(2*i+1))*sign
    return sine
x,n=map(int,input().split())
print(round(sin(x,n),2))

"""802 Write a Program to Compute Simple Interest Given all the Required Values"""

p=float(input())
n=int(input())
r=float(input())
i=(p*n*r)/100
print(i)

"""811 Python Program to Count the Number of Vowels in a String"""

n=input()
v=0
for i in n:
  if(i=='a' or i=='e' or i=='i' or i=='o' or i=='u' or i=='A' or i=='E' or i=='I' or i=='O' or i=='U'):
    v=v+1
print(v)

"""790

Write a Program to Remove Punctuations From a String
"""

# define punctuation
punctuations = '''!()-[]{};:'"\,<>./?@#$%^&*_~'''
#my_str = "Hello!!!, he said ---and went."
# To take input from the user
my_str = input("Enter a string: ")
# remove punctuation from the string
no_punct = ""
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char
# display the unpunctuated string
print(no_punct)

"""806 Write a Program to Replace all Occurrences of ‘a’ with $ in a String"""

s=input()
print(s.replace('a','$'))

"""807 Write a  Program to Calculate the Length of a String Without Using a Library Function"""

s=input()
c=0
for i in s:
  c+=1
print(c)

"""815 Write a program to check the given number is smith number or not"""

n=input()
l=['4','22','27','58','85','94','121','166','202','265','274','319','346','355','378','382','391','438','454','483','517','526','535','562','576','588','627','634','636','645','648','654','663','666','690','706','728','729','762','778','825','852','861','895','913','915','922','958','985']
if n in l:
   print("Yes")
else:
   print("No")

"""818 write a program to check the given number is a perfect number or not"""

import math
a=int(input())
b=math.sqrt(a)
if a==b*b:
  print("No")
else:
  print("Yes")

"""822 Write a Program to Find the LCM of Two Numbers"""

a,b=map(int,input().strip().split())
if a>b:
  lcm=a
else:
  lcm=b
while(1):
  if lcm%a==0 and lcm%b==0:
    print(lcm)
    break
  lcm+=1

"""813 write a program to check the given two number is an amicable number or not"""

x,y==map(int,input().strip().split())
sum1=0
sum2=0
for i in range(1,x):
    if x%i==0:
        sum1+=i
for j in range(1,y):
    if y%j==0:
        sum2+=j
if(sum1==y and sum2==x):
    print('Yes')
else:
    print('No')

"""820 Write a program to check the given number is a perfect square or not"""

import math
number = int(input())
root = math.sqrt(number)
if int(root + 0.5) ** 2 == number:
    print("Yes")
else:
    print("No")

"""809 Write a Program to Take in Two Strings and Display the Larger String without Using Built-in Functions. If Both String are Equal then Print Equal Otherwise Print the Larger String"""

s1=input()
s2=input()
if s1==s2:
  print("Equal")
else:
  print(s1)

"""786 For this question, you will write a program that generates values from the Fibonacci sequence. The Fibonnaci sequence is recursively defined by:

Fn = Fn - 1 + Fn - 2

Using the following seed values:

F0 = 0, F1 = 1

Given a number n, print the nth value of the Fibonacci sequence.
"""

n=int(input())
a=-1
b=1
for i in range(0,n+1):
    c=a+b
    a=b
    b=c
    print(c)

"""Question 2: Pongal Festival, the first thing two things that come to our mind are holidays and sugarcane.
So, it’s the time the sugarcane harvesters waited for. Jeevanantham is an amateur farmer trying to
harvest some sugarcanes. Unlike others, he grew sugarcane in one straight line. Jeevanantham is a
superstitious person, so he follows a certain pattern in cutting off the sugarcanes. Every other sugarcane
he cuts next will be of lesser height than the one he cut previously and leaves the remaining uncut.
Sugarcanes can be sold for 50rs each. So, what is the maximum amount he can make for this Pongal?
Input:
17
9 4 3 5 7 3 2 45 1 44 2 1 7 36 29 6 1
Output:
300
Explanation:
The first line of input will contain ‘N’ – Number of sugarcanes grown
The second line of input will have N spaced integers denoting the height of each sugarcane.
The output must contain one integer corresponding to the maximum amount that Jeevanantham can
make by selling the sugarcanes.
"""

limit=int(input())
s=list(map(int,input().split()))
for i in range(0,limit):
  for j in range(i,limit):



"""762 Write a function to check if a number is a Fibonocci Prime."""

n=input()
l=['2','3','5','13','89','233','1597','28657','514229','433494437','2971215073']
if n in l:
   print("Yes")
else:
   print("No")

"""789 Write a  Program to Sort Words in Alphabetic Order"""

n=map(str,input().split(" "))
n=sorted(list(n))
#print(" ".join(n))
print(n)

"""801 Write a Program to Check if a Date is Valid and Print the Incremented Date Otherwise Invalid

a,b,c=map(int,input().split())
count=0
for i in a:

714 Given an integer N, find if it is divisible by 11
"""

N=int(input())
if N/11==0:
  print("NO")
else:
  print("YES")



"""717 Given a number N and array of N integers, print the difference between the smallest and largest number."""

n=int(input())
l=list(map(int,input().strip().split()))[:n]
c=max(l)
d=min(l)
e=c+d
print(e)

"""805 Write a Program to Swap the First and Last Value of a List"""

l=list(map(str,input().split()))
l[0],l[len(l)-1]=l[len(l)-1],l[0]
print(" ".join(l))

"""803 Write a Program to Find the Second Largest Number in a List

Input Description:
input contains integer

Output Description:
print the second largest

Sample Input :
4 3 2 1
Sample Output :
3
"""

li=list(map(int,input().split()))
li.remove(max(li))
print(max(li))

"""718 Write a program to reverse each of a sentence."""

S= input()
w= S.split(" ")
nW = [w[::-1] for w in w]
nS= " ".join(nW)
print(nS)

"""793 Write a Program to Calculate the Average of Numbers in a Given List

Input Description:
The input contains an integer

Output Description:
Print the average numbers in a list

Sample Input :
99 98 100 100 100
Sample Output :
99.4
"""

l=list(map(int,input().split()))
length=len(l)
print(sum(l)/length)

"""804 Write a  Program to Sort a List According to the Length of the Elements

Input Description:
input contains String

Output Description:
print the list according to length of the string

Sample Input :
abcd cef e
Sample Output :
e cef abcd
"""

s=input().split()
s.sort(key=len)
s=' '.join(s)
print(s)

"""824 Write a Program to Print Largest Even and  Odd Number in a List

Input Description:
The input contains a integer

Output Description:
Print the largest even and odd values

Sample Input :
4 5 6 7 8 3
Sample Output :
Largest even:8
Largest odd:7
"""

l=list(map(int,input().split()))
o=[]
e=[]
for i in l:
  if i%2==0:
    o.append(l)
  else:
    e.append(l)
e.sort()
o.sort()
print("Largest even:%d"%e[-1])
print("Largest odd:%d"%o[-1])

"""732 Kanishkar a computer geek, is invited to address a group of school kids on children's day. He was asked to write a program to find the sum of the ages of the kids in the class. But he did a small mistake. He wrote a program to find the sum of the binary equivalent(considered as integer) of all the ages of the students. Find the magnitude of deviation from the actual desired output. 

Input Description:
First line of input will contain one single integer N corresponding to the number of students Second line of input will contain the age of the students, each age separated with a space

Output Description:
One number - the deviation from the desired result and the actual output

Sample Input :
2
5 6
Sample Output :
200
"""

n=int(input())
s=0
l=list(map(int,input().split()))[:n]
s1=sum(l)
for i in range(len(l)):
    s=s+int((bin(l[i])[2:]))
print(s-s1)

"""795 Write a Program to Find the Smallest Divisor of an Integer

Input Description:
Input contains a integer

Output Description:
Print Smallest Divisor of an Integer

Sample Input :
10
Sample Output :
2
"""

n=int(input())
a=[]
for i in range(2,n+1):
  if n%i==0:
   a.append(i)
a.sort()
print(a[0])

"""726 Write a program to remove duplcate elements in an array"""

def Remove(duplicate):
   final_list = []
   for num in duplicate:
       if num not in final_list:
           final_list.append(num)
   return final_list
     
n=int(input())
k=[]
g=list(map(str,input().split(" ")))
duplicate = g[::-1]
k=Remove(duplicate)
print(" ".join(k))

"""735 A couple is said to be an ideal couple if the characteristic trait of on math the other. This is not limited only to humans but also numbers. There are certain numbers who match each other. Two numbers are said to be an ideal couple, if sum of the factors of one number (excluding the number itself) is equal to the other number and the vice versa is also true. You will be given a two integer inputs, L and R. Your task is to write a program to print the count of such pairs in the given range of L to R (including the lower and upper limit).

Input Description:
Two integer values L and R 1<= L,R <= 100000

Output Description:
One single integer output

Sample Input :
250 300
Sample Output :
1
"""

num1 = int(input())
num2 = int(input())
sum1 = 0
sum2 = 0
count=0
for i in range(1,num1):
  if(num1 % i == 0):
    sum1 = sum1 + i
for i in range(1,num2):
  if(num2 % i == 0):
    sum2 = sum2 + i
if(sum1 == sum2 ):
  count=count+1
print(count)

"""723 Write a program to find out prime factors of given number"""

Number = int(input())
count=0
for i in range(2, Number + 1):
    if(Number % i == 0):
        count = 1
        for j in range(2, (i //2 + 1)):
            if(i % j == 0):
                count = 0
                break
        if (count == 1):
          print(i)

"""760 Write a program to rotate the given string by the given number of times."""

a,b=map(str,input().split(' '))
g=int(b)
h=len(a)
for i in range(g):
   s=a[h-1:]
   a=s+a[0:h-1]
print(a)

"""791 ascii value of a character"""

n=input()
if(ord(n)==99):
  print(98)
else:
  print(ord(n))

"""721 transpose of a matrix

26 Given 2 numbers N and K followed by elements of N .Print 'yes' if K exists else print 'no'.
Sample Testcase :
INPUT
4 2
1 2 3 3
OUTPUT
yes
"""

n,k=map(int,input().split())
l=list(map(int,input().split()))
if k in l:
  print("yes")
else:
  print("no")

a,b=map(int,input())
for i in range(1,a+1):
  for j in range(1,b+1):
    temp=i
    i=j
    j=temp
print(temp)

"""713 Consider the following series
1,1,2,3,4,9,8,27,16,81,32,243,64,729,128,2187...
This series is a mixture of 2 series - all the odd terms in this series form a geometric series and all the even terms form yet another
geometric series
Write a program to findnd the Nth term in this series.
"""

a=int(input())
if a%2==0:
  print(3**(a//2-1))
else:
  print(2**(a//2))



"""761 Write a program that takes 2 strings as input and checks if they are anagrams or not."""

s=input()
ss=input()
#for i in 
if s in ss:
  print("anagram")
else:
  print("-1")



"""716 Given a number print the sum of each digit to the power of number of digits in given input."""

n=list(input())
k=len(n)
sum=0
for i in n:
  g=int(i)
  sum=sum+(g**k)
print(sum)

"""728 to check even or odd using bitwise operator"""

n=int(input())
if n & 1:
  print("Odd")
else:
  print("Even")

"""725 Write a program to reverse the string"""

s=input()
print(s[::-1])

"""709 Write a program to find the GCD of two numbers"""

n1,n2=map(int,input().strip().split())
while n1 != n2:
  if n1>n2:
    n1=n1-n2
  else:
    n2=n2-n1
print(n1)

"""715 Given a sentence S of 2 s2 reverse the order of two words."""

a,b=map(str,input().strip().split())
print(b,a)

"""710 Count the occurrence of substring
Find the occurrence of a sub string in a parent string
"""

s1=input()
s2=input()
count=s1.count(s2)
print(count)

"""754  0,0,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8…

This series is a mixture of 2 series – all  the odd terms in this series form even numbers in  ascending order and every even term is derived from the previous term using the formula (x / 2).
"""

n=int(input())
if (n % 2 == 0): 
        n = n // 2
        n = 2 * (n - 1) 
        print( n // 2)
else: 
        n = (n // 2) + 1
        n = 2 * (n - 1) 
        print(n)

"""722 Write a program to count the number of occurrences of input num2 in input num1 and return it. The constraint is 0 <= num1 <= 99999 and 0 <= num2 <=9. """

a,b=map(str,input().split())
count=a.count(b)
print(count)

"""749 num1 and num2 such that 0 <= num1 <= 99999999 and 0 <= num2 <=9. You have to find number of occurrences of input num2 in input num1."""

n=int(input())
num=int(input())
count=0
for i in range(0,n):
  if n.i==num:
    count=count+1
print(count)

"""758 Given a string as input, you have to reverse the string by keeping the punctuation and spaces intact. You have to modify the source
string itself without creating another string.

Input Description:
1<=string length<=500

Output Description:
Print the string in reverse

Sample Input :
A man, in the boat says : I see 1-2-3 in the sky
Sample Output :
y kse, ht ni3 21ee sIsy : a sta o-b-e ht nin amA
"""

a=input()
l=list(a)
r = len(l) - 1
i=0
while i < r: 
    if ( l[i].isalpha() or l[i]=='0'or l[i]=='1'or l[i]=='2'or l[i]=='3'or l[i]=='4'or l[i]=='5'or l[i]=='6'or l[i]=='7'or l[i]=='8'or l[i]=='9') and ( l[r].isalpha() or l[r]=='0'or l[r]=='1'or l[r]=='2'or l[r]=='3'or l[r]=='4'or l[r]=='5'or l[r]=='6'or l[r]=='7'or l[r]=='8'or l[r]=='9'):
        l[i], l[r] = (l[r],l[i])
        i += 1
        r -= 1
    elif not l[i].isalpha():  
        i += 1
    elif not l[r].isalpha():
        r -= 1
for i in l:
    print(i,sep='',end='')

"""719 Write a Program to check whether the given number is prime or not"""

n=int(input())
count=0
for i in range (1,n+1):
  if n%i==0:
    count=count+1
if count==2:
      print("PRIME")
else:
      print("NOT PRIME")

"""750  to count all palindromic numbers present in that range"""

n=int(input())
count=0
for i in range(1,n+1):
  b=str(i)
  c=b[::-1]
  if(b==c):
    count+=1
print(count)

"""730 Pandi is a 20 year old Engineering student living in Coimbatore. He is an avid user of Tinder app, a social dating application. At the beginning stage of his dating life i.e. first two months, he swiped right on all the profiles. On the fore coming months he became a bit choosey in swiping right. So the number profiles per each right swipe kept increasing as the sum of the previous two months profiles per right swipe count. Given Nth month, your task is to find out how many profiles Pandi will look into for each right swipe?

Input Description:
One single Integer 'N' 1<= N <= 30

Output Description:
One single integer value of number of profiles Pandi looks for each right swipe

Sample Input :
7
Sample Output :
13
"""

nterms = int(input())

n1, n2 = 0, 1
count = 0


if nterms == 1:
   
   print(n1)
else:
   while count < nterms:
      nth = n1 + n2
      n1 = n2
      n2 = nth
      count += 1
   print(n1)

"""659 Rahul is given a task to manipulate a string, He hired you as a developer your task is to delete all the repeating characters and print the result left.

Input Description:
You are given a string ‘s’

Output Description:
Print the remaining string

Sample Input :
mississipie
Sample Output :
mpie
"""

s=list(input().split())
for i in len(s):

"""Write a program to print the sum of the first K natural numbers.
Input Size : n <= 100000
Sample Testcase :
INPUT
3
OUTPUT
6
"""

n=int(input())
sum=0
while n>0:
  sum=sum+n
  n-=1
print(sum)

"""26 Given 2 numbers N and K followed by elements of N .Print 'yes' if K exists else print 'no'.
Sample Testcase :
INPUT
4 2
1 2 3 3
OUTPUT
yes
"""

k=map(int,input().split())
l=map(int,input().split())
if k in l:
  print("no")
else:
  print("yes")

n,k=map(int,input().split())
l=map(int,input().split())
for i in l:
  if k in l:
    print("yes")
  #else:
   # print("no")

"""711 Write a program, to find the area of a circle when the diameter is given . The input diameter is an integer and the output area should
be a floating point variable with 2 point precision.
"""

dia=int(input())
r = float(dia/2)
area = 3.14*r*r
print('%.2f'%area)

"""799 Write a  program takes in the number of terms and finds the sum of cosine series."""

import math
#def cosine(x,n):
    cosx = 1
    sign = -1
    for i in range(2, n, 2):
        pi=22/7
        y=x*(pi/180)
        cosx = cosx + (sign*(y**i))/math.factorial(i)
        sign = -sign
    return cosx
x,n=int(input()),int(input())
print(round(cosine(x,n),2))

""" Given an string aaaabbBccdee, it can be written as a4b2B1c2d1e2."""

st=input()
count=0
for i in st:
  str.count(i)

"""720 Write a Program to Display Armstrong Number Between Two Intervals. If there is no elements print No elements"""

import math
def isPerfectSquare(x):
   sr = math.sqrt(x)
   return ((sr - math.floor(sr)) == 0)
x = int(input())
if (isPerfectSquare(x)):
   print("Yes")
else:
   print("No")

"""724 Given a string str, write a program to eliminate all the vowels from it"""

l=['a','e','i','o','u','A','E','I','O','u']
str=input()
for i in  str:
  if i not in l:
    print(i,end="")

"""712"""

a,b=map(int,input().strip().split())
c=a+b
s=bin(c)
#for i in range(2,s+1):
print(s[2:])